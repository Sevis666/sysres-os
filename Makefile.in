FILENAME ?= myos
MCPU     ?= cortex-a53
MEMORY   ?= 1024
MACHINE  ?= raspi3

ARMTOOLCHAIN ?= aarch64-linux-gnu
QEMU         ?= $(shell which qemu-system-aarch64 2>/dev/null)
ADDQEMUFLAGS += -d int,mmu,page -D log/qemu.log

ifdef LOG
LOG_ARG := -DLOG=$(LOG)
else
LOG_ARG :=
endif

SFLAGS += -mcpu=$(MCPU) -fpic -ffreestanding
CFLAGS += $(LOG_ARG)
CFLAGS += -mcpu=$(MCPU) -fpic -ffreestanding -std=gnu99 -O2 -Wall -Wextra -nostdlib -g
ASFLAGS += -g

c_src = $(shell find src -type f -name "*.c")
c_obj = $(subst src/,obj/,$(c_src:.c=.o))
s_src = $(shell find src -type f -name "*.s")
S_src = $(shell find src -type f -name "*.S")
s_obj = $(subst src/,obj/,$(s_src:.s=.o))
S_obj = $(subst src/,obj/,$(S_src:.S=.o))

obj/%.o: src/%.s
	@mkdir -p $(@D)
	@:$(call check-defined,ARMTOOLCHAIN,path to ARM toolchain)
	$(ARMTOOLCHAIN)-as $(ASFLAGS) -c $< -o $@

obj/%.o: src/%.c
	@mkdir -p $(@D)
	@:$(call check-defined,ARMTOOLCHAIN,path to ARM toolchain)
	$(ARMTOOLCHAIN)-gcc $(CFLAGSADD) $(CFLAGS) -c $< -o $@

obj/%.o: src/%.S
	@mkdir -p $(@D)
	@:$(call check-defined,ARMTOOLCHAIN,path to ARM toolchain)
	$(ARMTOOLCHAIN)-as $(ASFLAGS) -c $< -o $@

bin/$(FILENAME).elf: src/linker.ld $(c_obj) $(s_obj) $(S_obj)
	@:$(call check-defined,ARMTOOLCHAIN,path to ARM toolchain)
	$(ARMTOOLCHAIN)-ld -T src/linker.ld $(c_obj) $(s_obj) $(S_obj) -o bin/$(FILENAME).elf

bin/$(FILENAME).img: bin/$(FILENAME).elf
	@:$(call check-defined,ARMTOOLCHAIN,path to ARM toolchain)
	$(ARMTOOLCHAIN)-objcopy $< -O binary $@

run: clean bin/$(FILENAME).elf
	@:$(call check-defined,QEMU,path to qemu executables)
	$(QEMU) -m $(MEMORY) -M $(MACHINE) $(ADDQEMUFLAGS) -serial mon:stdio --kernel bin/$(FILENAME).elf

gdb: clean bin/$(FILENAME).elf
	@:$(call check-defined,QEMU,path to qemu executables)
	$(QEMU) -s -S -m $(MEMORY) -M $(MACHINE) -serial mon:stdio --kernel bin/$(FILENAME).elf

asm_dump: bin/$(FILENAME).elf
	@:$(call check-defined,ARMTOOLCHAIN,path to ARM toolchain)
	$(ARMTOOLCHAIN)-objdump -D -marm bin/$(FILENAME).elf

deploy: CFLAGSADD = -DHARDWARE
deploy: clean bin/$(FILENAME).img
	sudo mount /dev/mmcblk0p1 /mnt/sd
	sudo cp bin/$(FILENAME).img /mnt/sd/kernel7.img
	sudo umount /mnt/sd

weploy: CFLAGSADD = -DHARDWARE
weploy: clean bin/$(FILENAME).img
	sudo cp bin/$(FILENAME).img /media/waissfowl/sd/kernel7.img
	sudo umount /media/waissfowl/sd

connect:
	sudo screen /dev/ttyUSB0 115200
clean:
	rm -rf obj/*
clearlogs:
	rm -rf log/*
mrproper: clean clearlogs
	rm -rf bin/*

.PHONY: clean clearlogs mrproper

check-defined = \
	$(if $($1),, \
	$(error Undefined variable: $1$(if $2, ($2))$(if $(value @), \
		required by target `$@')))
